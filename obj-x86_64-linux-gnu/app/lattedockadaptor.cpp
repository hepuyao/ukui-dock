/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a lattedockadaptor -i lattecorona.h -l Latte::Corona /home/kylin/ukui/ukui-dock/latte-dock-0.9.11/app/dbus/org.kde.LatteDock.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "lattedockadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LatteDockAdaptor
 */

LatteDockAdaptor::LatteDockAdaptor(Latte::Corona *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LatteDockAdaptor::~LatteDockAdaptor()
{
    // destructor
}

void LatteDockAdaptor::activateLauncherMenu()
{
    // handle method call org.kde.LatteDock.activateLauncherMenu
    parent()->activateLauncherMenu();
}

QStringList LatteDockAdaptor::contextMenuData()
{
    // handle method call org.kde.LatteDock.contextMenuData
    return parent()->contextMenuData();
}

void LatteDockAdaptor::setBackgroundFromBroadcast(const QString &activity, const QString &screenName, const QString &filename)
{
    // handle method call org.kde.LatteDock.setBackgroundFromBroadcast
    parent()->setBackgroundFromBroadcast(activity, screenName, filename);
}

void LatteDockAdaptor::setBroadcastedBackgroundsEnabled(const QString &activity, const QString &screenName, bool enabled)
{
    // handle method call org.kde.LatteDock.setBroadcastedBackgroundsEnabled
    parent()->setBroadcastedBackgroundsEnabled(activity, screenName, enabled);
}

void LatteDockAdaptor::setContextMenuView(int id)
{
    // handle method call org.kde.LatteDock.setContextMenuView
    parent()->setContextMenuView(id);
}

void LatteDockAdaptor::showSettingsWindow(int page)
{
    // handle method call org.kde.LatteDock.showSettingsWindow
    parent()->showSettingsWindow(page);
}

void LatteDockAdaptor::switchToLayout(const QString &layout)
{
    // handle method call org.kde.LatteDock.switchToLayout
    parent()->switchToLayout(layout);
}

void LatteDockAdaptor::updateDockItemBadge(const QString &identifier, const QString &value)
{
    // handle method call org.kde.LatteDock.updateDockItemBadge
    parent()->updateDockItemBadge(identifier, value);
}

void LatteDockAdaptor::windowColorScheme(const QString &windowIdAndScheme)
{
    // handle method call org.kde.LatteDock.windowColorScheme
    parent()->windowColorScheme(windowIdAndScheme);
}


#include "lattedockadaptor.moc"
